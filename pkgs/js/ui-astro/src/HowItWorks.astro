---
import { Image } from "astro:assets";

interface Step {
  number: number;
  title: string;
  description: string;
  image?: string;
}

interface Props {
  title: string;
  subtitle?: string;
  steps: Step[];
  theme?: "default" | "dark" | "gradient";
  imageWidth?: number;
  imageHeight?: number;
}

const {
  title,
  subtitle,
  steps,
  theme = "default",
  imageWidth = 800,
  imageHeight = 600,
} = Astro.props;

const themeClasses = {
  default: "",
  dark: "bg-base-300",
  gradient: "bg-gradient-to-br from-info/5 to-primary/5",
};
---

<section
  class={`how-it-works-section w-full py-16 lg:py-24 overflow-x-hidden ${themeClasses[theme]}`}
>
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16 space-y-4">
      {
        subtitle && (
          <p class="text-sm font-semibold text-info uppercase tracking-wide">
            {subtitle}
          </p>
        )
      }

      <h2 class="text-4xl lg:text-5xl font-bold leading-tight">
        {title}
      </h2>
    </div>

    <!-- Timeline -->
    <div
      class="transition-all duration-1000 ease-out opacity-0 translate-y-8"
      data-animate="timeline"
    >
      <ul
        class="timeline timeline-snap-icon max-md:timeline-compact timeline-vertical"
      >
        {
          steps.map((step, index) => (
            <li class={index % 2 === 0 ? "" : "timeline-reverse"}>
              {index > 0 && <hr />}

              <div class="timeline-middle">
                <div class="w-8 h-8 bg-info text-info-content rounded-full flex items-center justify-center font-bold text-sm shadow-lg">
                  {step.number}
                </div>
              </div>

              <div
                class={
                  index % 2 === 0
                    ? "timeline-start mb-10 md:text-end"
                    : "timeline-end md:mb-10"
                }
              >
                <div class="bg-base-100 p-6 rounded-2xl shadow-lg border border-base-200 hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
                  <div class="text-lg font-black text-info mb-2">
                    {step.title}
                  </div>
                  <p class="text-base-content/70 leading-relaxed">
                    {step.description}
                  </p>

                  {step.image && (
                    <div class="mt-6 overflow-hidden">
                      <Image
                        src={step.image}
                        alt={step.title}
                        width={imageWidth}
                        height={imageHeight}
                        class="w-full h-auto object-cover rounded-xl shadow-lg border border-base-200 hover:shadow-xl transition-all duration-300"
                        loading="lazy"
                        format="webp"
                      />
                    </div>
                  )}
                </div>
              </div>

              {index < steps.length - 1 && <hr />}
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll(".how-it-works-section");

    sections.forEach((section) => {
      const animateElement = section.querySelector("[data-animate]");

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting && animateElement) {
              animateElement.classList.remove("opacity-0", "translate-y-8");
              animateElement.classList.add("opacity-100", "translate-y-0");
            }
          });
        },
        { threshold: 0.1 }
      );

      observer.observe(section);
    });
  });
</script>
