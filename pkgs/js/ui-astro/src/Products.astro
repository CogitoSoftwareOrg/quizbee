---
/**
 * Products Section Component
 * 
 * Flexible component for displaying product modules with optional featured sections.
 * 
 * Usage Examples:
 * 
 * 1. Only modules (no featured):
 *    <Products title="Our Products" modules={[...]} />
 * 
 * 2. Featured top + modules:
 *    <Products title="Products" featuredTop={{...}} modules={[...]} />
 * 
 * 3. Modules + featured bottom:
 *    <Products title="Products" modules={[...]} featuredBottom={{...}} />
 * 
 * 4. Featured top + modules + featured bottom:
 *    <Products title="Products" featuredTop={{...}} modules={[...]} featuredBottom={{...}} />
 */
import { Image } from "astro:assets";

interface Module {
  name: string;
  description: string;
  badge?: string;
  image?: string;
  href?: string;
}

interface FeaturedModule {
  title: string;
  description: string;
  image?: string;
  href?: string;
  accentColor?: "primary" | "secondary" | "accent" | "info" | "success";
}

interface Props {
  title: string;
  subtitle?: string;
  modules: Module[];
  featuredTop?: FeaturedModule;
  featuredBottom?: FeaturedModule;
  theme?: "default" | "dark" | "gradient";
  imageWidth?: number;
  imageHeight?: number;
}

const {
  title,
  subtitle,
  modules,
  featuredTop,
  featuredBottom,
  theme = "default",
  imageWidth = 800,
  imageHeight = 600,
} = Astro.props;

const themeClasses = {
  default: "",
  dark: "bg-base-300",
  gradient: "bg-gradient-to-br from-primary/5 to-secondary/5",
};
---

<section
  class={`products-section w-full py-16 lg:py-24 overflow-x-hidden ${themeClasses[theme]}`}
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16 space-y-4">
      {
        subtitle && (
          <p class="text-sm font-semibold text-primary uppercase tracking-wide">
            {subtitle}
          </p>
        )
      }

      <h2 class="text-4xl lg:text-5xl font-bold leading-tight">
        {title}
      </h2>
    </div>

    <!-- Featured Top Section -->
    {
      featuredTop && (
        <div
          class="transition-all duration-700 ease-out mb-16 opacity-0 translate-y-8"
          data-animate="featured-top"
        >
          <div class="max-w-4xl mx-auto">
            <a
              href={featuredTop.href}
              target="_blank"
              class="block no-underline"
            >
              <div
                class={`group card bg-base-100 border border-base-200 shadow-xl transition-all duration-200 hover:shadow-2xl hover:border-${featuredTop.accentColor || "primary"}/60 hover:-translate-y-1 cursor-pointer no-underline`}
              >
                {featuredTop.image && (
                  <figure class="px-4 pt-4">
                    <Image
                      src={featuredTop.image}
                      alt={featuredTop.title}
                      width={imageWidth}
                      height={imageHeight}
                      class="rounded-xl w-full h-auto max-h-84 object-cover object-top mx-auto"
                      loading="lazy"
                      format="webp"
                    />
                  </figure>
                )}
                <div class="card-body items-center text-center">
                  <h3 class="card-title text-3xl">{featuredTop.title}</h3>
                  <p class="text-lg text-base-content/80">
                    {featuredTop.description}
                  </p>
                </div>
              </div>
            </a>
          </div>
        </div>
      )
    }

    <!-- Modules Section -->
    <div class="mb-16">
      <!-- <div class="text-center mb-12">
        <h4 class="text-2xl font-bold mb-2">Modules (all run from chat)</h4>
        <p class="text-base-content/60">
          Specialized tools that power your marketing operations
        </p>
      </div> -->

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          modules.map((module, index) => (
            <div
              class="group transition-all duration-700 ease-out opacity-0 translate-y-8"
              data-animate="module"
              style={`transition-delay: ${index * 100}ms`}
            >
              <a href={module.href} target="_blank" class="block h-full no-underline">
                <div class="relative h-full rounded-2xl border transition-all duration-300 bg-base-100 shadow-lg hover:shadow-xl hover:-translate-y-2 hover:border-primary/30 group-hover:bg-primary/5">
                  <div class="p-6">
                    <div class="flex items-center justify-between mb-3">
                      <h5 class="text-lg font-bold text-base-content group-hover:text-primary transition-colors">
                        {module.name}
                      </h5>
                      {module.badge && (
                        <span class="badge badge-primary badge-sm">
                          {module.badge}
                        </span>
                      )}
                    </div>
                    <p class="text-base-content/70 leading-relaxed text-sm mb-4">
                      {module.description}
                    </p>

                    {module.image && (
                      <div class="mt-4">
                        <Image
                          src={module.image}
                          alt={module.name}
                          width={imageWidth}
                          height={imageHeight}
                          class="rounded-xl w-full h-auto max-h-84 object-cover object-top mx-auto"
                          loading="lazy"
                          format="webp"
                        />
                      </div>
                    )}
                  </div>

                  <!-- Hover Indicator -->
                  <div class="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity">
                    <div class="w-3 h-3 bg-primary rounded-full animate-pulse" />
                  </div>
                </div>
              </a>
            </div>
          ))
        }
      </div>
    </div>

    <!-- Featured Bottom Section -->
    {
      featuredBottom && (
        <div
          class="transition-all duration-700 ease-out opacity-0 translate-y-8"
          data-animate="featured-bottom"
          style="transition-delay: 600ms"
        >
          <div class="max-w-4xl mx-auto">
            <a
              href={featuredBottom.href}
              target="_blank"
              class="block no-underline"
            >
              <div
                class={`group card bg-base-100 border border-base-200 shadow-xl transition-all duration-200 hover:shadow-2xl hover:border-${featuredBottom.accentColor || "secondary"}/60 hover:-translate-y-1 cursor-pointer no-underline`}
              >
                {featuredBottom.image && (
                  <figure class="px-4 pt-4">
                    <Image
                      src={featuredBottom.image}
                      alt={featuredBottom.title}
                      width={imageWidth}
                      height={imageHeight}
                      class="rounded-xl w-full h-auto max-h-84 object-cover object-top mx-auto"
                      loading="lazy"
                      format="webp"
                    />
                  </figure>
                )}
                <div class="card-body items-center text-center">
                  <h3 class="card-title text-3xl">{featuredBottom.title}</h3>
                  <p class="text-lg text-base-content/80">
                    {featuredBottom.description}
                  </p>
                </div>
              </div>
            </a>
          </div>
        </div>
      )
    }
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll(".products-section");

    sections.forEach((section) => {
      const animateElements = section.querySelectorAll("[data-animate]");

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              animateElements.forEach((element) => {
                element.classList.remove("opacity-0", "translate-y-8");
                element.classList.add("opacity-100", "translate-y-0");
              });
            }
          });
        },
        { threshold: 0.1 }
      );

      observer.observe(section);
    });
  });
</script>

