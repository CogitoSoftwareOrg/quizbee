from typing import Protocol

from src.lib.config import LLMS


# class TextTokenizer(Protocol):
#     def encode(self, text: str, llm: LLMS = LLMS.GPT_5_MINI) -> list[int]: ...
#     def decode(self, tokens: list[int], llm: LLMS = LLMS.GPT_5_MINI) -> str: ...
#     def count_text(self, text: str, llm: LLMS = LLMS.GPT_5_MINI) -> int: ...


# class ImageTokenizer(Protocol):
#     def count_image(self, width: int, height: int) -> int: ...


# class Chunker(Protocol):
#     def chunk(self, text: str) -> list[str]: ...


class LLMToolsApp(Protocol):
    def encode(self, text: str, llm: LLMS = LLMS.GPT_5_MINI) -> list[int]: ...
    def decode(self, tokens: list[int], llm: LLMS = LLMS.GPT_5_MINI) -> str: ...
    def count_text(self, text: str, llm: LLMS = LLMS.GPT_5_MINI) -> int: ...
    def count_image(self, width: int, height: int) -> int: ...
    def chunk(self, text: str) -> list[str]: ...
