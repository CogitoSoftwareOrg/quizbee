#!/usr/bin/env bash
set -euo pipefail

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ===
: "${COOLIFY_URL:=https://app.coolify.io/api/v1}"
: "${APP_TAG:=quizbee}"                 # –¢–µ–≥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ Coolify ?tags=
: "${REMOTE:=origin}"                   # –ì–∏—Ç-—Ä–µ–º–æ—É—Ç
: "${MAIN_BRANCH:=main}"                # –û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ç–∫–∞

# === –ê—Ä–≥—É–º–µ–Ω—Ç—ã ===
# 1) bump: major | minor | patch | vX.Y.Z (—è–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
# 2) (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) --no-deploy | --dry-run
BUMP="${1:-}"
EXTRA="${2:-}"

if [[ -z "${COOLIFY_TOKEN:-}" ]]; then
  echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ COOLIFY_TOKEN –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏"
  exit 1
fi

if [[ -z "$BUMP" ]]; then
  echo "‚ùå Usage: COOLIFY_TOKEN=... $0 <major|minor|patch|vX.Y.Z> [--no-deploy|--dry-run]"
  exit 1
fi

NO_DEPLOY=false
DRY=false
case "${EXTRA:-}" in
  --no-deploy) NO_DEPLOY=true ;;
  --dry-run)   DRY=true; NO_DEPLOY=true ;;
  "" ) ;;
  *) echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–ª–∞–≥: ${EXTRA}"; exit 1 ;;
esac

# === –£—Ç–∏–ª–∏—Ç—ã ===
ver_normalize() { # strip leading 'v'
  echo "${1#v}"
}

bump_version() { # $1=current vX.Y.Z  $2=major|minor|patch
  local cur raw major minor patch
  raw="$(ver_normalize "$1")"
  IFS='.' read -r major minor patch <<<"$raw"
  case "$2" in
    major) echo "v$((major+1)).0.0" ;;
    minor) echo "v${major}.$((minor+1)).0" ;;
    patch) echo "v${major}.${minor}.$((patch+1))" ;;
    *) echo "‚ùå –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø bump: $2" >&2; return 1 ;;
  esac
}

latest_tag_on_main() {
  # –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ –≤–µ—Ä—Å–∏–∏ —Ç–µ–≥ 'v*', –¥–æ—Å—Ç–∏–∂–∏–º—ã–π –∏–∑ origin/main
  git fetch --tags --quiet "$REMOTE" "+refs/heads/${MAIN_BRANCH}:refs/remotes/${REMOTE}/${MAIN_BRANCH}"
  git tag --list 'v*' --merged "${REMOTE}/${MAIN_BRANCH}" | sort -V | tail -n1
}

head_of_main_commit() {
  git rev-parse "${REMOTE}/${MAIN_BRANCH}"
}

create_and_push_tag() { # $1=new_tag  $2=commit
  local tag="$1" commit="$2"
  if git rev-parse -q --verify "refs/tags/${tag}" >/dev/null; then
    echo "‚úÖ –¢–µ–≥ ${tag} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–ø—Ä–æ–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ)"
  else
    if [[ "$DRY" == true ]]; then
      echo "üß™ DRY-RUN: git tag -a ${tag} ${commit} -m \"Release ${tag}\""
    else
      git tag -a "${tag}" "${commit}" -m "Release ${tag}"
      git push "$REMOTE" "${tag}"
      echo "üè∑Ô∏è  –°–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ç–µ–≥ ${tag} ‚Üí ${REMOTE}"
    fi
  fi
}

deploy_coolify_by_tag() { # $1=commit_sha
  local commit="$1"
  echo "üîç –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å —Ç–µ–≥–æ–º '${APP_TAG}'..."
  local APPS_JSON
  APPS_JSON=$(curl -sS -H "Authorization: Bearer $COOLIFY_TOKEN" \
    "$COOLIFY_URL/applications?tags=$APP_TAG")

  local APP_UUIDS
  APP_UUIDS=$(echo "$APPS_JSON" | jq -r '.[].uuid')

  if [[ -z "$APP_UUIDS" ]]; then
    echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Ç–µ–≥–æ–º '$APP_TAG' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    exit 1
  fi

  for UUID in $APP_UUIDS; do
    echo "üîß –§–∏–∫—Å–∏—Ä—É—é commit SHA –¥–ª—è app ${UUID} ‚Üí ${commit}"
    curl -sS -X PATCH "$COOLIFY_URL/applications/$UUID" \
      -H "Authorization: Bearer $COOLIFY_TOKEN" \
      -H "Content-Type: application/json" \
      -d "{\"git_commit_sha\":\"$commit\",\"instant_deploy\":false}" >/dev/null
  done

  echo "üöÄ –¢—Ä–∏–≥–µ—Ä—é –¥–µ–ø–ª–æ–π –¥–ª—è –≤—Å–µ—Ö '$APP_TAG'..."
  curl -sS -H "Authorization: Bearer $COOLIFY_TOKEN" \
    "$COOLIFY_URL/deploy?tag=$APP_TAG&force=true" >/dev/null

  echo "‚úÖ Deployment triggered successfully!"
}

# === –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ ===
git fetch --tags --quiet "$REMOTE"

LATEST_TAG="$(latest_tag_on_main || true)"
if [[ -z "$LATEST_TAG" ]]; then
  LATEST_TAG="v0.0.0"  # —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞, –µ—Å–ª–∏ —Ç–µ–≥–æ–≤ –Ω–µ—Ç
fi

if [[ "$BUMP" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
  NEW_TAG="$BUMP"
else
  case "$BUMP" in
    major|minor|patch) NEW_TAG="$(bump_version "$LATEST_TAG" "$BUMP")" ;;
    *) echo "‚ùå –£–∫–∞–∂–∏—Ç–µ major|minor|patch –∏–ª–∏ —è–≤–Ω—ã–π vX.Y.Z"; exit 1 ;;
  esac
fi

MAIN_COMMIT="$(head_of_main_commit)"
echo "‚ÑπÔ∏è  –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥ –Ω–∞ ${REMOTE}/${MAIN_BRANCH}: ${LATEST_TAG}"
echo "‚ÑπÔ∏è  –ù–æ–≤—ã–π —Ä–µ–ª–∏–∑–Ω—ã–π —Ç–µ–≥: ${NEW_TAG}"
echo "‚ÑπÔ∏è  –ö–æ–º–º–∏—Ç –¥–ª—è —Ç–µ–≥–∞: ${MAIN_COMMIT}"

create_and_push_tag "$NEW_TAG" "$MAIN_COMMIT"

if [[ "$NO_DEPLOY" == true ]]; then
  echo "‚ÑπÔ∏è  –î–µ–ø–ª–æ–π –æ—Ç–∫–ª—é—á—ë–Ω —Ñ–ª–∞–≥–æ–º --no-deploy${DRY:+ (DRY-RUN)}"
  exit 0
fi

# –î–µ–ø–ª–æ–π —ç—Ç–æ–≥–æ –∫–æ–º–º–∏—Ç–∞ –≤ Coolify
deploy_coolify_by_tag "$MAIN_COMMIT"
