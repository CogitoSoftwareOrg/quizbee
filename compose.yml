services:
  pb:
    build:
      context: pb
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./pb/pb_data:/pb/pb_data
      - ./pb/pb_migrations:/pb/pb_migrations
      - ./pb/pb_hooks:/pb/pb_hooks
    ports:
      - "8090:8090"

  api:
    build:
      context: api
      dockerfile: Dockerfile.local
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./api/src:/app/src:ro
    depends_on:
      - pb

  app:
    build:
      context: app
      dockerfile: Dockerfile.local
    volumes:
      - ./app:/app
      - app_node_modules:/app/node_modules
    env_file:
      - .env
    command: >
      sh -lc 'set -e;
      pnpm install --frozen-lockfile;
      pnpm run dev --host 0.0.0.0 --port 5173'
    ports:
      - "5173:5173"

  web:
    build:
      context: web
      dockerfile: Dockerfile.local
    volumes:
      - ./web:/app
      - web_node_modules:/app/node_modules
    env_file:
      - .env
    command: >
      sh -lc 'set -e;
      pnpm install --frozen-lockfile;
      pnpm astro dev --host 0.0.0.0 --port 4321'
    ports:
      - "4321:4321"
  meilisearch:
    image: getmeili/meilisearch:latest
    ports:
      - "7700:7700"
    volumes:
      - ./meilisearch/data:/meili_data
    env_file:
      - .env

volumes:
  app_node_modules:
  web_node_modules:

  # redis:
  #   image: docker.dragonflydb.io/dragonflydb/dragonfly:latest

  # worker:
  #   build:
  #     context: api
  #     dockerfile: Dockerfile.worker
  #   depends_on:
  #     - redis
  #   env_file:
  #     - api/.env
  #   volumes:
  #     - api/src:/app/src:ro
  #   command: >
  #     sh -lc 'uv run python -m watchfiles --filter python -- "uv run arq -v api.worker.WorkerSettings"'
